import { GoogleSheetCli } from './google-sheet';
/**
 * Get the longest array of array of arrays
 *
 * @param {any[][]} array
 * @returns {{ index: number; array: any[]; length: number }}
 */
export declare const getLongestArray: (array: any[][]) => {
    index: number;
    array: any[];
    length: number;
};
/**
 * Convert number to A1 notation
 *
 * @param {number} col
 * @returns {string}
 */
export declare const colToA: (col: number) => string;
/**
 * Convert A1 notation to number
 *
 * @param {string} label
 * @returns {number}
 */
export declare const aToCol: (label: string) => number;
/**
 * Parse a range from a1Notation to options
 *
 * @param {GoogleSheetCli.QueryOptions} [options={}]
 * @returns {GoogleSheetCli.QueryOptions[]}
 */
export declare const parseRanges: (options?: GoogleSheetCli.QueryOptions) => GoogleSheetCli.QueryOptions[];
/**
 * Convert query options to range notation
 *
 * @param {GoogleSheetCli.QueryOptions} [options={}]
 * @returns {string}
 */
export declare const getRange: (options?: GoogleSheetCli.QueryOptions) => string;
